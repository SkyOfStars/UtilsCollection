plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
//    id 'com.alibaba.arouter'
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+8"))
}

android {
    compileSdk rootProject.android.compileSdkVersion

    defaultConfig {
        applicationId rootProject.appId["tools"]
        minSdk rootProject.android.minSdkVersion
        targetSdk rootProject.android.targetSdkVersion
        versionCode rootProject.android.versionCode
        versionName rootProject.android.versionName

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    signingConfigs {
        release {
            storeFile file('../platformjks/shared.keystore')//这里是你的jks文件路径
            keyPassword 'password1'
            keyAlias 'androidentry'
            storePassword 'password2'
        }

        debug {
            storeFile file('../platformjks/shared.keystore')//这里是你的jks文件路径
            keyPassword 'password1'
            keyAlias 'androidentry'
            storePassword 'password2'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    //这里修改apk文件名
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                if ("release".contains(variant.name)) {
                    outputFileName = "Tools_${variant.name}_v${variant.versionName}_" +
                            "${releaseTime()}.apk"
                } else {
                    outputFileName = "Tools_${variant.name}_v${variant.versionName}.apk"
                }
            }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //fresco库
    implementation 'com.facebook.fresco:fresco:0.12.0'
    // 支持 GIF 动图，需要添加
    implementation 'com.facebook.fresco:animated-gif:0.12.0'
    // 支持 WebP （静态图+动图），需要添加
    implementation 'com.facebook.fresco:animated-webp:0.12.0'
    implementation 'com.facebook.fresco:webpsupport:0.12.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
//    implementation 'com.android.support:support-v4:27.1.1'

    //noinspection GradleCompatible
//    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation("com.github.bumptech.glide:glide:4.13.2")
    implementation("com.squareup.okio:okio:1.11.0")
    implementation("com.squareup.okhttp3:okhttp:4.6.0")
}
